/*
(Черепаховая графика) Язык Logo, особенно популярный среди пользователей 
персональных компьютеров, сделал знаменитым принцип черепаховой графики (title graphics).
Вообразите себе механическую черепаху, которая передвигается по комнате 
под управлением программы на С. ЧЯерепаха держит перо в одной из двух 
позиций, верхней или нижней. Когда перо находится в нижней позиции, черепаха 
при своем движении вычерчиваетразличные фигуры, а когда перо находится в
верхней позиции, черепаха свободно перемещается, не оставляя при этом никаких 
следов.При решении этой задачи вы смоделируете действия черепахи,
а также создадите автоматизированный блокнот для набросков.
Используйте массив floor("пол") размером 50 на 50, инициализированный нулями.
Считывайте команды из содержимого их массива. Все время отслеживайте
текущее местоположение черепахи и то, находится ли перо в настоящее время 
в верхней или нижней позиции. Предположим, что черепаха всегда начинает 
в точке пола с координатами 0, 0 с поднятым пером. Набор команд черепахи,
которые должна обработать ваша программа:
Команда. Смысл
1.       Поднять перо.
2.       Опустить перо.
3.       Повернуть направо.
4.       Повернуть налево.
5, 10.   Переместиться вперед на 10(или другое число) интервалов.
6.       Вывести на экран массив размером 50х50.
9.       Конец данных(контрольное значение).
Предположим, что черепаха находится где-то вблизи центра пола. Следующая "программа"
рисует и выводит на экран квадрат размером 12х12.
Когда черепаха перемещается с опущенным пером, устанавливайте соответствующие
элементы массива floor в 1.При выдаче команды 6 (вывести на экран) для всех элементов 
массива, в которых находится 1, отобразите на экране звездочку или любой другой символ,
который вам нравится. Для всех элементов массива, в которых находится нуль, отобразите 
на экране пробел. Напишите программу С, реализующую возможности черепашьей графики,
которые сейчас мы обсудили. Напимшите несколько программ черепашьей графики, которые 
рисуют интересные фигуры. Добавьте другие команды для увеличения мощности нашего
"черепашьего" языка
2
5, 12
3
5, 12
3
5, 12
3
5, 12
1
6
9
*/


#include <stdio.h>
#include <stdlib.h>

#define SIZE1 50
#define SIZE2 50
#define SIZE3 15

void printArray(int array[][SIZE2], int size1, int size2);//печать поля
void move(int array[][SIZE2], int p, int t, int nn);//движение черепахи
	
int main(void)
{
	int floors[SIZE1][SIZE2] = {0};//массив поля
	int a[SIZE3] = {2, 5, 12, 3, 5, 12, 3, 5, 12, 3, 5, 12, 6, 1, 9};//массив команд
	int n, pen, tern = 0, command;

	for(int i = 0; i < SIZE3; i++)
	{
		
  		command = a[i];//переменной command присваивается команда из массива
	
		
		switch(command)
		{
			case 1:
				pen = 0;//перо поднято
			break;

			case 2:
				pen = 1;//перо опущено
			break;

			case 3:
				tern = 0;//поворот вправо
			break;

			case 4:
				tern = 1;//поворот влево
			break;

			case 5:
			        n = a[i + 1];//на сколько шагов двигается черепаха
				move(floors, pen, tern, n);//движение
				i++;
			break;
			case 6:
				printArray(floors, SIZE1, SIZE2);//печать
			break;
			case 9:
			break;
		}

    }
}

void printArray( int array[][SIZE2], int size1, int size2)
{
	for(int i = 0; i < size1; i++)
	{
		puts(" ");
		for(int j = 0; j < size2; j++)
		{
			if(array[i][j] == 1)
			{
				printf("%s", "*");
			}
			else
			{
				printf("%s", "-");
			}
		}
	}
}

move(int array[][SIZE2], int p, int t, int nn)
{
	static int curM = 20, curN = 20, preM = 21, preN = 20, mov = 1;//статические переменные, не изменяют своих значений при выходе из функции
        //curM текущее значение строки
	//curN текущее значение столбца
	//preM предыдущее значение строки
	//preN предыдущее значение столбца
	//mov количество шагов
	

	if( t == 0)//поворот направо
	{
		if( curN == preN)//черепаха не двигалась по горизонтали ранее
		{
 			if(curM + mov == preM)//черепаха передвинулась по вертикали на  mov шагов вниз ранее
			{
			        //предыдущие значения равны текущим значениям
			        preM = curM;
                                preN = curN;
				
				//передвинуть черепаху сейчас по горизонтали вправо
				for (int i = 0; i < nn; i++)
                                {
				//если перо поднято, нарисовать звездочки
                                   if( p == 1 )
                                       array[ curM ][ curN ] = 1;
				   
                                   curN++;//увеличить текущее значение по горизонтали
                                 }
			}
			else //черепаха передвинулась по вертикали на  mov шагов вверх ранее
			{
			    //предыдущие значения равны текущим значениям
			    preM = curM;
                            preN = curN;
			    
			    //передвинуть черепаху сейчас по горизонтали влево
                            for (int i = 0; i < nn; i++)
                            {
                                //если перо поднято, нарисовать звездочки
                                 if( p == 1 )
                                     array[ curM ][ curN ] = 1;
				 
                                 curN--;//уменьшить текущее значение по горизонтали
                             }
			}
		}
		else if( curM == preM)//черепаха не двигалась по вертикали  ранее
		{
			if(curN + mov == preN)//черепаха передвинулась по горизонтали на  mov шагов влево ранее
			{
			    //предыдущие значения равны текущим значениям
			    preM = curM;
                            preN = curN;
			    
			    //передвинуть черепаху сейчас по вертикали вниз
	                    for (int i = 0; i < nn; i++)
                            {
			       //если перо поднято, нарисовать звездочки
			        if( p == 1 )
                                   array[ curM ][ curN ] = 1;
				
                                curM--;//уменьшить текущее значение по вертикали
                             }
			}
			else //черепаха передвинулась по горизонтали на  mov шагов вправо ранее
			{
			    //предыдущие значения равны текущим значениям
			    preM = curM;
                            preN = curN;
                           
			   //передвинуть черепаху сейчас по вертикали вверх
			   for (int i = 0; i < nn; i++)
                           { 
                              if( p == 1 )
                                 array[ curM ][ curN ] = 1;
			      
                              curM++;//увеличить текущее значение по вертикали
                           }
			}
		}
	}
	else if( t == 1)//поворот налево
	{
		if( curN == preN)
		{		    
			if(curM + mov == preM)
			{
			    preM = curM;
                            preN = curN;
			    
			    for (int i = 0; i < nn; i++)
                            {			            
                                if( p == 1 )
                                    array[ curM ][ curN ] = 1;
				
		                curN--;
                            }
			}
			else 
			{
			   preM = curM;
                           preN = curN;
			   
                          for (int i = 0; i < nn; i++)
                          { 
                              if( p == 1 )
                                  array[ curM ][ curN ] = 1;
			      
		              curN++;
                          }
			}
		}
		else if( curM == preM)
		{   
			if(curN+mov == preN)
			{
				preM = curM;
                                preN = curN;
				
				for (int i = 0; i < nn; i++)
                                {
                                    if( p == 1 )
                                       array[ curM ][ curN ] = 1;
				    
				    curM++;
                                }
			}
			else 
			{
			    preM = curM;
                            preN = curN;
			    
                            for (int i = 0; i < nn; i++)
                            { 
                                if( p == 1 )
                                   array[ curM ][ curN ] = 1;
				
		                curM--;
                           }
			}
		}
	}
	mov = nn;//количество шагов, на которое передвигается черепаха

}
